steps:
- name: gcr.io/cloud-builders/docker
  id: 'build-container-image'
  args:
    - 'build'
    - '--no-cache'
    - '-t'
    - 'gcr.io/$_REPO_PROJ_ID/rebred:latest'
    - '.'
  waitFor: ['-']

- name: gcr.io/cloud-builders/docker
  id: 'push-container-image'
  args:
    - 'push'
    - 'gcr.io/$_REPO_PROJ_ID/rebred:latest'
  waitFor: ['build-container-image']

- name: gcr.io/cloud-builders/gcloud-slim
  id: 'deploy'
  args:
    - 'run'
    - 'services'
    - 'update'
    - 'rebred'
    - '--platform=managed'
    - '--image=gcr.io/$_REPO_PROJ_ID/rebred:latest'
    - '--region=us-central1'
    - '--set-env-vars=${_ENV1},${_ENV2}'
    - '--quiet'
  waitFor: ['push-container-image']

- name: gcr.io/cloud-builders/gcloud-slim
  id: 'redirect-traffic'
  args:
    - 'run'
    - 'services'
    - 'update-traffic'
    - 'rebred'
    - '--to-latest'
    - '--platform=managed'
    - '--region=us-central1'
  waitFor: ['deploy']
images:
  - 'gcr.io/$_REPO_PROJ_ID/rebred'

- name: gcr.io/cloud-builders/git
  id: 'drop-cache'
  entrypoint: '/bin/sh'
  args:
  - '-c'
  - |
    curl -X POST "https://api.cloudflare.com/client/v4/zones/$$CLOUDFLARE_API_ZONE/purge_cache" \
      -H "X-Auth-Email: $_CLOUDFLARE_EMAIL_ADDRESS" \
      -H "X-Auth-Key: $$CLOUDFLARE_API_KEY" \
      -H "Content-Type: application/json" \
      --data '{"purge_everything":true}'
  availableSecrets:
    secretManager:
    - versionName: projects/546950964653/secrets/cloudflare_api_key/versions/2
      env: 'CLOUDFLARE_API_KEY'
    - versionName: projects/546950964653/secrets/cloudflare_api_zone/versions/1
      env: 'CLOUDFLARE_API_ZONE'